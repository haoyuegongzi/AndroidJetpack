<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <!--name：为方便我们使用，给数据类起的别名，比如我们的数据类型是Student，
    下面方式一和方式二里面的name都是我们给Student起的别名，我们总不至于直接
    使用Student，这样一是跟Student.kt重合，二是不容易区分开，容易出问题。
        type：指定我们要引用的数据类的完整路径名，比如这里我们例子用到的
    Student的完整路径是com.androidjetpack.livedata.Student
        import：如果我们使用的Student类型会在很多地方用到，我们也可以采用
    “import”的方式引进来，这样我们就不用每次都指明整个包名的路径了。

        实际使用中，数据的引用方式：@{***.***}，另外，在初始状态下Student
    的所有成员属性都是没有值的，不方便我们在不居中观察状态，因此我们有两个方案
    来解决，一是：tools:text="***"，tools开头的属性在布局的时候会显示出来，但
    在正式运行的时候不会。二是：android:text="@{***.***,default = vaue}"。
    方案二有个缺陷：value值里面不能包含标点符号，无论中英文标点符号，只能包含
    少量的特殊字符，比如“$”、“_”等等。而方案一则灵活不收限制。

        layout布局文件写好之后，再Build→→Rebuild Project，编译完成后可以发现
    下面的情况，表示我们的操作是成功的。

        默认情况下，这个类的名称基于布局文件的名称创建的，将其转换为Pascal大小写并向
    其添加Binding后缀。上面的布局文件名是activity_live_data.xml，因此相应的生成类是
    ActivityLiveDataBinding。

        接下来我们就需要在Activity当中为「userInfo」赋值：
    val binding: ActivityMainBinding = DataBindingUtil.setContentView(
            this, R.layout.activity_live_data)
        binding.studentInfo = Student("杨大爷", "20")
        最后是运行效果；
    -->
    <data>
        <!--方式一-->
        <variable
            name="sudentInfo"
            type="com.androidjetpack.databinding.Student" />
        <!--方式二-->
        <import type="com.androidjetpack.databinding.Student"/>
        <variable
            name="mStudent"
            type="Student" />
    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".databinding.DataBindingActivity"
        android:background="@mipmap/fire">

        <TextView
            android:id="@+id/tvName"
            android:layout_width="wrap_content"
            android:layout_height="40dp"
            android:layout_marginStart="10dp"
            android:layout_marginTop="10dp"
            android:text="@{mStudent.name}"
            tools:text="名字"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintTop_toTopOf="parent"/>

        <TextView
            android:id="@+id/tvGrade"
            android:layout_width="wrap_content"
            android:layout_height="40dp"
            android:layout_marginStart="10dp"
            android:layout_marginTop="10dp"
            android:text="@{mStudent.grade}"
            tools:text="年级"
            app:layout_constraintLeft_toRightOf="@+id/tvName"
            app:layout_constraintTop_toTopOf="parent"/>

        <TextView
            android:id="@+id/tvAge"
            android:layout_width="wrap_content"
            android:layout_height="40dp"
            android:layout_marginStart="10dp"
            android:layout_marginTop="10dp"
            android:onClick="ageClick"
            android:text="@{mStudent.age, default=年龄18}"
            app:layout_constraintLeft_toRightOf="@+id/tvGrade"
            app:layout_constraintTop_toTopOf="parent"/>

        <TextView
            android:id="@+id/tvButton"
            android:layout_width="80dp"
            android:layout_height="40dp"
            android:layout_marginStart="10dp"
            android:layout_marginTop="10dp"
            android:text="按钮"
            android:gravity="center"
            android:background="@drawable/navigation_btn_bg"
            app:layout_constraintLeft_toRightOf="@+id/tvAge"
            app:layout_constraintTop_toTopOf="parent"/>

        <androidx.recyclerview.widget.RecyclerView
            android:id="@+id/rvList"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/tvAge"
            android:layout_margin="10dp"/>
    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>